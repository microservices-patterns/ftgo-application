apply plugin: IntegrationTestsPlugin
apply plugin: 'docker-compose'

dependencies {
    implementation "com.amazonaws:aws-lambda-java-core:1.1.0"
    implementation "com.amazonaws:aws-lambda-java-events:2.0.1"

    implementation("io.eventuate.tram.core:eventuate-tram-spring-producer-jdbc") {
        exclude module: "org.springframework"
    }
    implementation "io.eventuate.tram.core:eventuate-tram-spring-events"
    implementation "io.eventuate.tram.core:eventuate-tram-spring-messaging"
    implementation project(":ftgo-restaurant-service-api")
    implementation project(":ftgo-common-jpa")
    implementation project(":ftgo-common")

    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"

    implementation 'javax.el:javax.el-api:2.2.5'
    implementation 'io.eventuate.tram.sagas:eventuate-tram-sagas-participant:0.20.0.RELEASE'
    implementation 'io.eventuate.tram.sagas:eventuate-tram-sagas-participant:0.20.0.RELEASE'
    implementation 'io.eventuate.tram.sagas:eventuate-tram-sagas-spring-participant:0.20.0.RELEASE'

    testImplementation "io.eventuate.util:eventuate-util-test"
    testImplementation "io.eventuate.tram.core:eventuate-tram-test-util"

    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation 'com.jayway.restassured:rest-assured:2.3.0'
    testImplementation "com.jayway.jsonpath:json-path:2.3.0"

    testImplementation(platform("io.eventuate.platform:eventuate-platform-dependencies:$eventuatePlatformVersion"))
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeOnly
    }
}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion
    environment.put "EVENTUATE_SAGA_VERSION", eventuateTramSagasImageVersion
    environment.put "EVENTUATE_JAVA_BASE_IMAGE_VERSION", eventuateExamplesBaseImageVersion
    environment.put "EVENTUATE_MESSAGING_KAFKA_IMAGE_VERSION", eventuateMessagingKafkaImageVersion

    projectName = null

    integrationTests {
        projectName = null
        removeOrphans = true
        retainContainersOnStartupFailure = true

        startedServices = ['mysql']
        stopContainers = true
    }
}

integrationTest.dependsOn(integrationTestsComposeUp)

build.dependsOn buildZip

